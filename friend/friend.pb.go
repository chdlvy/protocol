// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0--rc3
// source: friend.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID    string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	FromNickname  string `protobuf:"bytes,2,opt,name=fromNickname,proto3" json:"fromNickname,omitempty"`
	FromFaceURL   string `protobuf:"bytes,3,opt,name=fromFaceURL,proto3" json:"fromFaceURL,omitempty"`
	ToUserID      string `protobuf:"bytes,4,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
	ToNickname    string `protobuf:"bytes,5,opt,name=toNickname,proto3" json:"toNickname,omitempty"`
	ToFaceURL     string `protobuf:"bytes,6,opt,name=toFaceURL,proto3" json:"toFaceURL,omitempty"`
	HandleResult  int32  `protobuf:"varint,7,opt,name=handleResult,proto3" json:"handleResult,omitempty"`
	ReqMsg        string `protobuf:"bytes,8,opt,name=reqMsg,proto3" json:"reqMsg,omitempty"`
	CreateTime    int64  `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	HandlerUserID string `protobuf:"bytes,10,opt,name=handlerUserID,proto3" json:"handlerUserID,omitempty"`
	HandleMsg     string `protobuf:"bytes,11,opt,name=handleMsg,proto3" json:"handleMsg,omitempty"`
	HandleTime    int64  `protobuf:"varint,12,opt,name=handleTime,proto3" json:"handleTime,omitempty"`
	Ex            string `protobuf:"bytes,13,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{0}
}

func (x *FriendRequest) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *FriendRequest) GetFromNickname() string {
	if x != nil {
		return x.FromNickname
	}
	return ""
}

func (x *FriendRequest) GetFromFaceURL() string {
	if x != nil {
		return x.FromFaceURL
	}
	return ""
}

func (x *FriendRequest) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

func (x *FriendRequest) GetToNickname() string {
	if x != nil {
		return x.ToNickname
	}
	return ""
}

func (x *FriendRequest) GetToFaceURL() string {
	if x != nil {
		return x.ToFaceURL
	}
	return ""
}

func (x *FriendRequest) GetHandleResult() int32 {
	if x != nil {
		return x.HandleResult
	}
	return 0
}

func (x *FriendRequest) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *FriendRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FriendRequest) GetHandlerUserID() string {
	if x != nil {
		return x.HandlerUserID
	}
	return ""
}

func (x *FriendRequest) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *FriendRequest) GetHandleTime() int64 {
	if x != nil {
		return x.HandleTime
	}
	return 0
}

func (x *FriendRequest) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL    string `protobuf:"bytes,3,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Ex         string `protobuf:"bytes,4,opt,name=ex,proto3" json:"ex,omitempty"`
	CreateTime int64  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *UserInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *UserInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime int64     `protobuf:"varint,1,opt,name=createTime,proto3" json:"createTime,omitempty"`
	FriendUser *UserInfo `protobuf:"bytes,2,opt,name=friendUser,proto3" json:"friendUser,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{2}
}

func (x *FriendInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FriendInfo) GetFriendUser() *UserInfo {
	if x != nil {
		return x.FriendUser
	}
	return nil
}

type GetPaginationFriendsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetPaginationFriendsReq) Reset() {
	*x = GetPaginationFriendsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaginationFriendsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsReq) ProtoMessage() {}

func (x *GetPaginationFriendsReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsReq.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{3}
}

func (x *GetPaginationFriendsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetPaginationFriendsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendsInfo []*FriendInfo `protobuf:"bytes,1,rep,name=friendsInfo,proto3" json:"friendsInfo,omitempty"`
	Total       int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetPaginationFriendsResp) Reset() {
	*x = GetPaginationFriendsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaginationFriendsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationFriendsResp) ProtoMessage() {}

func (x *GetPaginationFriendsResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationFriendsResp.ProtoReflect.Descriptor instead.
func (*GetPaginationFriendsResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{4}
}

func (x *GetPaginationFriendsResp) GetFriendsInfo() []*FriendInfo {
	if x != nil {
		return x.FriendsInfo
	}
	return nil
}

func (x *GetPaginationFriendsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApplyToAddFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
	ReqMsg     string `protobuf:"bytes,3,opt,name=reqMsg,proto3" json:"reqMsg,omitempty"`
	Ex         string `protobuf:"bytes,4,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *ApplyToAddFriendReq) Reset() {
	*x = ApplyToAddFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyToAddFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyToAddFriendReq) ProtoMessage() {}

func (x *ApplyToAddFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyToAddFriendReq.ProtoReflect.Descriptor instead.
func (*ApplyToAddFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyToAddFriendReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *ApplyToAddFriendReq) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

func (x *ApplyToAddFriendReq) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

func (x *ApplyToAddFriendReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type ApplyToAddFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplyToAddFriendResp) Reset() {
	*x = ApplyToAddFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyToAddFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyToAddFriendResp) ProtoMessage() {}

func (x *ApplyToAddFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyToAddFriendResp.ProtoReflect.Descriptor instead.
func (*ApplyToAddFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{6}
}

type AgreeFrendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
}

func (x *AgreeFrendReq) Reset() {
	*x = AgreeFrendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeFrendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeFrendReq) ProtoMessage() {}

func (x *AgreeFrendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeFrendReq.ProtoReflect.Descriptor instead.
func (*AgreeFrendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{7}
}

func (x *AgreeFrendReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *AgreeFrendReq) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

type AgreeFrendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgreeFrendResp) Reset() {
	*x = AgreeFrendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreeFrendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreeFrendResp) ProtoMessage() {}

func (x *AgreeFrendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreeFrendResp.ProtoReflect.Descriptor instead.
func (*AgreeFrendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{8}
}

type RefuseFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
}

func (x *RefuseFriendReq) Reset() {
	*x = RefuseFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseFriendReq) ProtoMessage() {}

func (x *RefuseFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseFriendReq.ProtoReflect.Descriptor instead.
func (*RefuseFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{9}
}

func (x *RefuseFriendReq) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *RefuseFriendReq) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

type RefuseFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefuseFriendResp) Reset() {
	*x = RefuseFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefuseFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefuseFriendResp) ProtoMessage() {}

func (x *RefuseFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefuseFriendResp.ProtoReflect.Descriptor instead.
func (*RefuseFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{10}
}

type GetFriendReqToMeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetFriendReqToMeReq) Reset() {
	*x = GetFriendReqToMeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendReqToMeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendReqToMeReq) ProtoMessage() {}

func (x *GetFriendReqToMeReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendReqToMeReq.ProtoReflect.Descriptor instead.
func (*GetFriendReqToMeReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendReqToMeReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFriendReqToMeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRequests []*FriendRequest `protobuf:"bytes,1,rep,name=FriendRequests,proto3" json:"FriendRequests,omitempty"`
	Total          int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetFriendReqToMeResp) Reset() {
	*x = GetFriendReqToMeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendReqToMeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendReqToMeResp) ProtoMessage() {}

func (x *GetFriendReqToMeResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendReqToMeResp.ProtoReflect.Descriptor instead.
func (*GetFriendReqToMeResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{12}
}

func (x *GetFriendReqToMeResp) GetFriendRequests() []*FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

func (x *GetFriendReqToMeResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AddBlackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserID string `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	BlackUserID string `protobuf:"bytes,2,opt,name=blackUserID,proto3" json:"blackUserID,omitempty"`
}

func (x *AddBlackReq) Reset() {
	*x = AddBlackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackReq) ProtoMessage() {}

func (x *AddBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackReq.ProtoReflect.Descriptor instead.
func (*AddBlackReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{13}
}

func (x *AddBlackReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *AddBlackReq) GetBlackUserID() string {
	if x != nil {
		return x.BlackUserID
	}
	return ""
}

type AddBlackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBlackResp) Reset() {
	*x = AddBlackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackResp) ProtoMessage() {}

func (x *AddBlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackResp.ProtoReflect.Descriptor instead.
func (*AddBlackResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{14}
}

type RemoveBlackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserID string `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	BlackUserID string `protobuf:"bytes,2,opt,name=blackUserID,proto3" json:"blackUserID,omitempty"`
}

func (x *RemoveBlackReq) Reset() {
	*x = RemoveBlackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackReq) ProtoMessage() {}

func (x *RemoveBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackReq.ProtoReflect.Descriptor instead.
func (*RemoveBlackReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveBlackReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *RemoveBlackReq) GetBlackUserID() string {
	if x != nil {
		return x.BlackUserID
	}
	return ""
}

type RemoveBlackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveBlackResp) Reset() {
	*x = RemoveBlackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackResp) ProtoMessage() {}

func (x *RemoveBlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackResp.ProtoReflect.Descriptor instead.
func (*RemoveBlackResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{16}
}

type GetPaginationBlacksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetPaginationBlacksReq) Reset() {
	*x = GetPaginationBlacksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaginationBlacksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationBlacksReq) ProtoMessage() {}

func (x *GetPaginationBlacksReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationBlacksReq.ProtoReflect.Descriptor instead.
func (*GetPaginationBlacksReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{17}
}

func (x *GetPaginationBlacksReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetPaginationBlacksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blacks []*UserInfo `protobuf:"bytes,1,rep,name=blacks,proto3" json:"blacks,omitempty"`
	Total  int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetPaginationBlacksResp) Reset() {
	*x = GetPaginationBlacksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaginationBlacksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaginationBlacksResp) ProtoMessage() {}

func (x *GetPaginationBlacksResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaginationBlacksResp.ProtoReflect.Descriptor instead.
func (*GetPaginationBlacksResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{18}
}

func (x *GetPaginationBlacksResp) GetBlacks() []*UserInfo {
	if x != nil {
		return x.Blacks
	}
	return nil
}

func (x *GetPaginationBlacksResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IsFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID1 string `protobuf:"bytes,1,opt,name=userID1,proto3" json:"userID1,omitempty"`
	UserID2 string `protobuf:"bytes,2,opt,name=userID2,proto3" json:"userID2,omitempty"`
}

func (x *IsFriendReq) Reset() {
	*x = IsFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendReq) ProtoMessage() {}

func (x *IsFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendReq.ProtoReflect.Descriptor instead.
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{19}
}

func (x *IsFriendReq) GetUserID1() string {
	if x != nil {
		return x.UserID1
	}
	return ""
}

func (x *IsFriendReq) GetUserID2() string {
	if x != nil {
		return x.UserID2
	}
	return ""
}

type IsFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InUser1Friends bool `protobuf:"varint,1,opt,name=inUser1Friends,proto3" json:"inUser1Friends,omitempty"` //如果userID2在userID1的好友列表中 true
	InUser2Friends bool `protobuf:"varint,2,opt,name=inUser2Friends,proto3" json:"inUser2Friends,omitempty"` //如果userID1在userID2的好友列表中 true
}

func (x *IsFriendResp) Reset() {
	*x = IsFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsFriendResp) ProtoMessage() {}

func (x *IsFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsFriendResp.ProtoReflect.Descriptor instead.
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{20}
}

func (x *IsFriendResp) GetInUser1Friends() bool {
	if x != nil {
		return x.InUser1Friends
	}
	return false
}

func (x *IsFriendResp) GetInUser2Friends() bool {
	if x != nil {
		return x.InUser2Friends
	}
	return false
}

type IsBlackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID1 string `protobuf:"bytes,1,opt,name=userID1,proto3" json:"userID1,omitempty"`
	UserID2 string `protobuf:"bytes,2,opt,name=userID2,proto3" json:"userID2,omitempty"`
}

func (x *IsBlackReq) Reset() {
	*x = IsBlackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBlackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlackReq) ProtoMessage() {}

func (x *IsBlackReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlackReq.ProtoReflect.Descriptor instead.
func (*IsBlackReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{21}
}

func (x *IsBlackReq) GetUserID1() string {
	if x != nil {
		return x.UserID1
	}
	return ""
}

func (x *IsBlackReq) GetUserID2() string {
	if x != nil {
		return x.UserID2
	}
	return ""
}

type IsBlackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InUser1Blacks bool `protobuf:"varint,1,opt,name=inUser1Blacks,proto3" json:"inUser1Blacks,omitempty"` //如果userID2在userID1的黑名单列表中 true
	InUser2Blacks bool `protobuf:"varint,2,opt,name=inUser2Blacks,proto3" json:"inUser2Blacks,omitempty"` //如果userID1在userID2的黑名单列表中 true
}

func (x *IsBlackResp) Reset() {
	*x = IsBlackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBlackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBlackResp) ProtoMessage() {}

func (x *IsBlackResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBlackResp.ProtoReflect.Descriptor instead.
func (*IsBlackResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{22}
}

func (x *IsBlackResp) GetInUser1Blacks() bool {
	if x != nil {
		return x.InUser1Blacks
	}
	return false
}

func (x *IsBlackResp) GetInUser2Blacks() bool {
	if x != nil {
		return x.InUser2Blacks
	}
	return false
}

type DeleteFriendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserID  string `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	FriendUserID string `protobuf:"bytes,2,opt,name=friendUserID,proto3" json:"friendUserID,omitempty"`
}

func (x *DeleteFriendReq) Reset() {
	*x = DeleteFriendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendReq) ProtoMessage() {}

func (x *DeleteFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendReq.ProtoReflect.Descriptor instead.
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteFriendReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *DeleteFriendReq) GetFriendUserID() string {
	if x != nil {
		return x.FriendUserID
	}
	return ""
}

type DeleteFriendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendResp) Reset() {
	*x = DeleteFriendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResp) ProtoMessage() {}

func (x *DeleteFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResp.ProtoReflect.Descriptor instead.
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{24}
}

type SetFriendRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserID  string `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	FriendUserID string `protobuf:"bytes,2,opt,name=friendUserID,proto3" json:"friendUserID,omitempty"`
	Remark       string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SetFriendRemarkReq) Reset() {
	*x = SetFriendRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkReq) ProtoMessage() {}

func (x *SetFriendRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkReq.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{25}
}

func (x *SetFriendRemarkReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

func (x *SetFriendRemarkReq) GetFriendUserID() string {
	if x != nil {
		return x.FriendUserID
	}
	return ""
}

func (x *SetFriendRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SetFriendRemarkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetFriendRemarkResp) Reset() {
	*x = SetFriendRemarkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRemarkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRemarkResp) ProtoMessage() {}

func (x *SetFriendRemarkResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRemarkResp.ProtoReflect.Descriptor instead.
func (*SetFriendRemarkResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{26}
}

type GetFriendReqFromMeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetFriendReqFromMeReq) Reset() {
	*x = GetFriendReqFromMeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendReqFromMeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendReqFromMeReq) ProtoMessage() {}

func (x *GetFriendReqFromMeReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendReqFromMeReq.ProtoReflect.Descriptor instead.
func (*GetFriendReqFromMeReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{27}
}

func (x *GetFriendReqFromMeReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFriendReqFromMeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRequests []*FriendRequest `protobuf:"bytes,1,rep,name=friendRequests,proto3" json:"friendRequests,omitempty"`
	Total          int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetFriendReqFromMeResp) Reset() {
	*x = GetFriendReqFromMeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendReqFromMeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendReqFromMeResp) ProtoMessage() {}

func (x *GetFriendReqFromMeResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendReqFromMeResp.ProtoReflect.Descriptor instead.
func (*GetFriendReqFromMeResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{28}
}

func (x *GetFriendReqFromMeResp) GetFriendRequests() []*FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

func (x *GetFriendReqFromMeResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetFriendIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetFriendIDsReq) Reset() {
	*x = GetFriendIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIDsReq) ProtoMessage() {}

func (x *GetFriendIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIDsReq.ProtoReflect.Descriptor instead.
func (*GetFriendIDsReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{29}
}

func (x *GetFriendIDsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetFriendIDsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendIDs []string `protobuf:"bytes,1,rep,name=friendIDs,proto3" json:"friendIDs,omitempty"`
}

func (x *GetFriendIDsResp) Reset() {
	*x = GetFriendIDsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendIDsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendIDsResp) ProtoMessage() {}

func (x *GetFriendIDsResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendIDsResp.ProtoReflect.Descriptor instead.
func (*GetFriendIDsResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{30}
}

func (x *GetFriendIDsResp) GetFriendIDs() []string {
	if x != nil {
		return x.FriendIDs
	}
	return nil
}

type Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserID  uint64                 `protobuf:"varint,1,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
	FriendUserID uint64                 `protobuf:"varint,2,opt,name=friendUserID,proto3" json:"friendUserID,omitempty"`
	Remark       string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	AddSource    int32                  `protobuf:"varint,5,opt,name=addSource,proto3" json:"addSource,omitempty"`
}

func (x *Friend) Reset() {
	*x = Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Friend.ProtoReflect.Descriptor instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{31}
}

func (x *Friend) GetOwnerUserID() uint64 {
	if x != nil {
		return x.OwnerUserID
	}
	return 0
}

func (x *Friend) GetFriendUserID() uint64 {
	if x != nil {
		return x.FriendUserID
	}
	return 0
}

func (x *Friend) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Friend) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Friend) GetAddSource() int32 {
	if x != nil {
		return x.AddSource
	}
	return 0
}

type GetFriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserID string `protobuf:"bytes,1,opt,name=ownerUserID,proto3" json:"ownerUserID,omitempty"`
}

func (x *GetFriendListReq) Reset() {
	*x = GetFriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListReq) ProtoMessage() {}

func (x *GetFriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListReq.ProtoReflect.Descriptor instead.
func (*GetFriendListReq) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{32}
}

func (x *GetFriendListReq) GetOwnerUserID() string {
	if x != nil {
		return x.OwnerUserID
	}
	return ""
}

type GetFriendListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *GetFriendListResp) Reset() {
	*x = GetFriendListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListResp) ProtoMessage() {}

func (x *GetFriendListResp) ProtoReflect() protoreflect.Message {
	mi := &file_friend_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListResp.ProtoReflect.Descriptor instead.
func (*GetFriendListResp) Descriptor() ([]byte, []int) {
	return file_friend_proto_rawDescGZIP(), []int{33}
}

func (x *GetFriendListResp) GetFriends() []*Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

var File_friend_proto protoreflect.FileDescriptor

var file_friend_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9f, 0x03, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x63,
	0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52,
	0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65,
	0x78, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x0e, 0x0a, 0x02,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x0a,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0a, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x13, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x65, 0x78, 0x22, 0x16, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4b, 0x0a, 0x0d,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x10, 0x0a, 0x0e, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x46, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4d, 0x0a, 0x0f, 0x52,
	0x65, 0x66, 0x75, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x54, 0x6f,
	0x4d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x64, 0x0a,
	0x14, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x54, 0x6f, 0x4d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x51, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x0e, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x11, 0x0a, 0x0f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x30, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x52, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x06,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x41, 0x0a, 0x0b, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x31, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x32, 0x22, 0x5e, 0x0a, 0x0c, 0x69, 0x73, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x31, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x32, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x32, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x0a, 0x69, 0x73, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x31,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x32, 0x22, 0x59, 0x0a, 0x0b, 0x69, 0x73,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x31, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x32, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x32, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x57, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x12,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x72, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x15, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a,
	0x15, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x66,
	0x0a, 0x16, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x46, 0x72,
	0x6f, 0x6d, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x30, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x49, 0x44, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x11,
	0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x32, 0xd7, 0x06, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x3f, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x0e, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x0f, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x46, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x10, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x54, 0x6f, 0x4d, 0x65, 0x12, 0x14, 0x2e, 0x67, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x54, 0x6f, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x54, 0x6f,
	0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x12, 0x16, 0x2e, 0x67,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x46, 0x72, 0x6f, 0x6d, 0x4d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x0c, 0x2e, 0x61, 0x64, 0x64, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x61, 0x64, 0x64, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x0f, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x0c, 0x2e, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x24, 0x0a, 0x07, 0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x0b, 0x2e, 0x69,
	0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x69, 0x73, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x17,
	0x2e, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x10, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x67,
	0x65, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x67, 0x65, 0x74, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44,
	0x73, 0x12, 0x10, 0x2e, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x67, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x03,
	0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_friend_proto_rawDescOnce sync.Once
	file_friend_proto_rawDescData = file_friend_proto_rawDesc
)

func file_friend_proto_rawDescGZIP() []byte {
	file_friend_proto_rawDescOnce.Do(func() {
		file_friend_proto_rawDescData = protoimpl.X.CompressGZIP(file_friend_proto_rawDescData)
	})
	return file_friend_proto_rawDescData
}

var file_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_friend_proto_goTypes = []interface{}{
	(*FriendRequest)(nil),            // 0: FriendRequest
	(*UserInfo)(nil),                 // 1: UserInfo
	(*FriendInfo)(nil),               // 2: FriendInfo
	(*GetPaginationFriendsReq)(nil),  // 3: getPaginationFriendsReq
	(*GetPaginationFriendsResp)(nil), // 4: getPaginationFriendsResp
	(*ApplyToAddFriendReq)(nil),      // 5: applyToAddFriendReq
	(*ApplyToAddFriendResp)(nil),     // 6: applyToAddFriendResp
	(*AgreeFrendReq)(nil),            // 7: agreeFrendReq
	(*AgreeFrendResp)(nil),           // 8: agreeFrendResp
	(*RefuseFriendReq)(nil),          // 9: RefuseFriendReq
	(*RefuseFriendResp)(nil),         // 10: RefuseFriendResp
	(*GetFriendReqToMeReq)(nil),      // 11: getFriendReqToMeReq
	(*GetFriendReqToMeResp)(nil),     // 12: getFriendReqToMeResp
	(*AddBlackReq)(nil),              // 13: addBlackReq
	(*AddBlackResp)(nil),             // 14: addBlackResp
	(*RemoveBlackReq)(nil),           // 15: removeBlackReq
	(*RemoveBlackResp)(nil),          // 16: removeBlackResp
	(*GetPaginationBlacksReq)(nil),   // 17: getPaginationBlacksReq
	(*GetPaginationBlacksResp)(nil),  // 18: getPaginationBlacksResp
	(*IsFriendReq)(nil),              // 19: isFriendReq
	(*IsFriendResp)(nil),             // 20: isFriendResp
	(*IsBlackReq)(nil),               // 21: isBlackReq
	(*IsBlackResp)(nil),              // 22: isBlackResp
	(*DeleteFriendReq)(nil),          // 23: deleteFriendReq
	(*DeleteFriendResp)(nil),         // 24: deleteFriendResp
	(*SetFriendRemarkReq)(nil),       // 25: setFriendRemarkReq
	(*SetFriendRemarkResp)(nil),      // 26: setFriendRemarkResp
	(*GetFriendReqFromMeReq)(nil),    // 27: getFriendReqFromMeReq
	(*GetFriendReqFromMeResp)(nil),   // 28: getFriendReqFromMeResp
	(*GetFriendIDsReq)(nil),          // 29: getFriendIDsReq
	(*GetFriendIDsResp)(nil),         // 30: getFriendIDsResp
	(*Friend)(nil),                   // 31: Friend
	(*GetFriendListReq)(nil),         // 32: getFriendListReq
	(*GetFriendListResp)(nil),        // 33: getFriendListResp
	(*timestamppb.Timestamp)(nil),    // 34: google.protobuf.Timestamp
}
var file_friend_proto_depIdxs = []int32{
	1,  // 0: FriendInfo.friendUser:type_name -> UserInfo
	2,  // 1: getPaginationFriendsResp.friendsInfo:type_name -> FriendInfo
	0,  // 2: getFriendReqToMeResp.FriendRequests:type_name -> FriendRequest
	1,  // 3: getPaginationBlacksResp.blacks:type_name -> UserInfo
	0,  // 4: getFriendReqFromMeResp.friendRequests:type_name -> FriendRequest
	34, // 5: Friend.CreateTime:type_name -> google.protobuf.Timestamp
	31, // 6: getFriendListResp.friends:type_name -> Friend
	5,  // 7: friend.applyToAddFriend:input_type -> applyToAddFriendReq
	7,  // 8: friend.agreeFriend:input_type -> agreeFrendReq
	9,  // 9: friend.refuseFriend:input_type -> RefuseFriendReq
	11, // 10: friend.getFriendReqToMe:input_type -> getFriendReqToMeReq
	27, // 11: friend.getFriendReqFromMe:input_type -> getFriendReqFromMeReq
	13, // 12: friend.addBlack:input_type -> addBlackReq
	15, // 13: friend.removeBlack:input_type -> removeBlackReq
	19, // 14: friend.isFriend:input_type -> isFriendReq
	21, // 15: friend.isBlack:input_type -> isBlackReq
	17, // 16: friend.getPaginationBlacks:input_type -> getPaginationBlacksReq
	23, // 17: friend.deleteFriend:input_type -> deleteFriendReq
	25, // 18: friend.setFriendRemark:input_type -> setFriendRemarkReq
	3,  // 19: friend.getPaginationFriends:input_type -> getPaginationFriendsReq
	29, // 20: friend.getFriendIDs:input_type -> getFriendIDsReq
	32, // 21: friend.getFriendList:input_type -> getFriendListReq
	6,  // 22: friend.applyToAddFriend:output_type -> applyToAddFriendResp
	8,  // 23: friend.agreeFriend:output_type -> agreeFrendResp
	10, // 24: friend.refuseFriend:output_type -> RefuseFriendResp
	12, // 25: friend.getFriendReqToMe:output_type -> getFriendReqToMeResp
	28, // 26: friend.getFriendReqFromMe:output_type -> getFriendReqFromMeResp
	14, // 27: friend.addBlack:output_type -> addBlackResp
	16, // 28: friend.removeBlack:output_type -> removeBlackResp
	20, // 29: friend.isFriend:output_type -> isFriendResp
	22, // 30: friend.isBlack:output_type -> isBlackResp
	18, // 31: friend.getPaginationBlacks:output_type -> getPaginationBlacksResp
	24, // 32: friend.deleteFriend:output_type -> deleteFriendResp
	26, // 33: friend.setFriendRemark:output_type -> setFriendRemarkResp
	4,  // 34: friend.getPaginationFriends:output_type -> getPaginationFriendsResp
	30, // 35: friend.getFriendIDs:output_type -> getFriendIDsResp
	33, // 36: friend.getFriendList:output_type -> getFriendListResp
	22, // [22:37] is the sub-list for method output_type
	7,  // [7:22] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_friend_proto_init() }
func file_friend_proto_init() {
	if File_friend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_friend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaginationFriendsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaginationFriendsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyToAddFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyToAddFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeFrendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreeFrendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefuseFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendReqToMeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendReqToMeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaginationBlacksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaginationBlacksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBlackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBlackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRemarkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendReqFromMeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendReqFromMeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendIDsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_friend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_friend_proto_goTypes,
		DependencyIndexes: file_friend_proto_depIdxs,
		MessageInfos:      file_friend_proto_msgTypes,
	}.Build()
	File_friend_proto = out.File
	file_friend_proto_rawDesc = nil
	file_friend_proto_goTypes = nil
	file_friend_proto_depIdxs = nil
}
